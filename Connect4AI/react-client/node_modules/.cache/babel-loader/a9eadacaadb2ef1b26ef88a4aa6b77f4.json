{"ast":null,"code":"import _regeneratorRuntime from\"/Users/pranavputta/WebstormProjects/Connect4AI/react-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/pranavputta/WebstormProjects/Connect4AI/react-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/pranavputta/WebstormProjects/Connect4AI/react-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/pranavputta/WebstormProjects/Connect4AI/react-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/pranavputta/WebstormProjects/Connect4AI/react-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/pranavputta/WebstormProjects/Connect4AI/react-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React from\"react\";import Game,{TokenToColor}from\"./Game\";import{rows,cols,calculate_move}from'../WASM';import'./Board.css';import logo from\"../logo.svg\";var Board=/*#__PURE__*/function(_React$Component){_inherits(Board,_React$Component);var _super=_createSuper(Board);function Board(props){var _this;_classCallCheck(this,Board);_this=_super.call(this,props);_this.game=void 0;_this.game=new Game();_this.state={board:_this.game.board,enabled:true};return _this;}_createClass(Board,[{key:\"transpose\",value:function transpose(){var transpose=[];for(var c=0;c<cols;c++){transpose.push([]);for(var r=0;r<rows;r++){transpose[c].push(this.state.board[r][c]);}}return transpose;}},{key:\"won\",value:function won(){alert(\"\".concat(this.game.playerName,\" won!\"));}},{key:\"play\",value:function(){var _play=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(col){var inserted,won;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:inserted=this.game.play(col);if(!inserted){_context.next=11;break;}this.setState({board:this.game.board});won=this.game.check_winner();if(!won){_context.next=9;break;}this.won();return _context.abrupt(\"return\",false);case 9:this.game.togglePlayer();return _context.abrupt(\"return\",true);case 11:return _context.abrupt(\"return\",false);case 12:case\"end\":return _context.stop();}}},_callee,this);}));function play(_x){return _play.apply(this,arguments);}return play;}()},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Connect4 AI\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"Row\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Current Player: \"}),/*#__PURE__*/_jsx(\"div\",{className:\"CurrentPlayer\",style:{backgroundColor:TokenToColor(this.game.token)}}),!this.state.enabled&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"AI Thinking\"}),/*#__PURE__*/_jsx(\"img\",{src:logo,className:\"App-logo\",alt:\"logo\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"Board\",children:this.transpose().map(function(col,c){return/*#__PURE__*/_jsx(\"div\",{className:\"Column\",onClick:function onClick(){if(_this2.state.enabled){_this2.setState({enabled:false},function(){_this2.play(c).then(function(cont){if(cont){var ai=calculate_move(_this2.game.board,10);_this2.play(ai).then(function(c){if(c){_this2.setState({enabled:true});}});}});});}},children:col.map(function(tok,r){return/*#__PURE__*/_jsx(TokenView,{r:r,c:c,tok:tok});})});})})]});}}]);return Board;}(React.Component);var TokenView=/*#__PURE__*/function(_React$Component2){_inherits(TokenView,_React$Component2);var _super2=_createSuper(TokenView);function TokenView(){_classCallCheck(this,TokenView);return _super2.apply(this,arguments);}_createClass(TokenView,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{className:\"Token\",style:{backgroundColor:TokenToColor(this.props.tok)}},\"\".concat(this.props.r,\", \").concat(this.props.c));}}]);return TokenView;}(React.Component);export default Board;","map":{"version":3,"sources":["/Users/pranavputta/WebstormProjects/Connect4AI/react-client/src/game/Board.tsx"],"names":["React","Game","TokenToColor","rows","cols","calculate_move","Board","props","game","state","board","enabled","transpose","c","push","r","alert","playerName","col","inserted","play","setState","won","check_winner","togglePlayer","backgroundColor","token","logo","map","then","cont","ai","tok","Component","TokenView"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Game, {Token, TokenToColor} from \"./Game\";\nimport {rows, cols, calculate_move} from '../WASM'\nimport './Board.css'\nimport logo from '../logo.svg'\n\n\ninterface Props {\n}\n\ninterface State {\n    board: Token[][],\n    enabled: boolean\n}\n\nclass Board extends React.Component<Props, State> {\n\n    private game: Game;\n\n    constructor(props: Props) {\n        super(props);\n\n        this.game = new Game()\n\n        this.state = {\n            board: this.game.board,\n            enabled: true\n        }\n    }\n\n    transpose(): Token[][] {\n        let transpose: Token[][] = []\n        for (let c = 0; c < cols; c++) {\n            transpose.push([])\n            for (let r = 0; r < rows; r++) {\n                transpose[c].push(this.state.board[r][c])\n            }\n        }\n        return transpose\n    }\n\n    won() {\n        alert(`${this.game.playerName} won!`)\n    }\n\n    async play(col: number): Promise<boolean> {\n        let inserted = this.game.play(col);\n        if (inserted) {\n            this.setState({board: this.game.board})\n            let won = this.game.check_winner();\n            if (won) {\n                this.won();\n                return false;\n            } else {\n                this.game.togglePlayer()\n                return true;\n            }\n        }\n        return false;\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Connect4 AI</h1>\n                <div className=\"Row\">\n                    <p>Current Player: </p>\n                    <div className=\"CurrentPlayer\" style={{backgroundColor: TokenToColor(this.game.token)}}/>\n                    {!this.state.enabled && <div>\n                        <p>AI Thinking</p>\n                        <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                    </div>}\n                </div>\n                <div className='Board'>\n                    {this.transpose().map((col, c) => (\n                        <div className='Column' onClick={() => {\n                            if (this.state.enabled) {\n                                this.setState({enabled: false}, () => {\n                                    this.play(c).then((cont) => {\n                                        if (cont) {\n                                            let ai = calculate_move(this.game.board, 10)\n                                            this.play(ai).then((c) => {\n                                                if (c) {\n                                                    this.setState({enabled: true})\n                                                }\n                                            })\n                                        }\n                                    })\n                                })\n                            }\n                        }}>\n                            {col.map((tok, r) => (<TokenView r={r} c={c} tok={tok}/>))}\n                        </div>\n                    ))}\n                </div>\n            </div>)\n    }\n}\n\ninterface TokenProps {\n    tok: Token,\n    r: number,\n    c: number\n}\n\ninterface TokenState {\n}\n\nclass TokenView extends React.Component<TokenProps, TokenState> {\n\n    render() {\n        return <div key={`${this.props.r}, ${this.props.c}`}\n                    className='Token'\n                    style={{backgroundColor: TokenToColor(this.props.tok)}}/>\n    }\n\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}