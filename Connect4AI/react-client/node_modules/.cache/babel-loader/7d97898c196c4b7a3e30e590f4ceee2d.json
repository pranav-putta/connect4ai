{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pranavputta/WebstormProjects/Connect4AI/react-client/src/game/Board.tsx\";\nimport React from \"react\";\nimport Game, { TokenToColor } from \"./Game\";\nimport { ROWS, COLS } from \"./Constants\";\nimport './Board.css';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.game = void 0;\n    this.game = new Game();\n    this.state = {\n      board: this.game.board\n    };\n  }\n\n  transpose() {\n    let transpose = [];\n\n    for (let c = 0; c < COLS; c++) {\n      transpose.push([]);\n\n      for (let r = 0; r < ROWS; r++) {\n        transpose[c].push(this.state.board[r][c]);\n      }\n    }\n\n    return transpose;\n  }\n\n  won() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Connect4 AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Row\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Current Player: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"CurrentPlayer\",\n          style: {\n            backgroundColor: TokenToColor(this.game.token)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Board\",\n        children: this.transpose().map((col, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Column\",\n          onClick: () => {\n            let won = this.game.play(index);\n            this.setState({\n              board: this.game.board\n            });\n\n            if (won) {\n              this.won();\n            }\n          },\n          children: col.map(tok => /*#__PURE__*/_jsxDEV(TokenView, {\n            tok: tok\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 42\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nclass TokenView extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Token\",\n      style: {\n        backgroundColor: TokenToColor(this.props.tok)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/pranavputta/WebstormProjects/Connect4AI/react-client/src/game/Board.tsx"],"names":["React","Game","TokenToColor","ROWS","COLS","Board","Component","constructor","props","game","state","board","transpose","c","push","r","won","render","backgroundColor","token","map","col","index","play","setState","tok","TokenView"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,IAAqBC,YAArB,QAAwC,QAAxC;AACA,SAAQC,IAAR,EAAcC,IAAd,QAAyB,aAAzB;AACA,OAAO,aAAP;;AASA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAkD;AAI9CC,EAAAA,WAAW,CAACC,KAAD,EAAe;AACtB,UAAMA,KAAN;AADsB,SAFlBC,IAEkB;AAGtB,SAAKA,IAAL,GAAY,IAAIR,IAAJ,EAAZ;AAEA,SAAKS,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,KAAKF,IAAL,CAAUE;AADR,KAAb;AAGH;;AAEDC,EAAAA,SAAS,GAAc;AACnB,QAAIA,SAAoB,GAAG,EAA3B;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,IAApB,EAA0BS,CAAC,EAA3B,EAA+B;AAC3BD,MAAAA,SAAS,CAACE,IAAV,CAAe,EAAf;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,IAApB,EAA0BY,CAAC,EAA3B,EAA+B;AAC3BH,QAAAA,SAAS,CAACC,CAAD,CAAT,CAAaC,IAAb,CAAkB,KAAKJ,KAAL,CAAWC,KAAX,CAAiBI,CAAjB,EAAoBF,CAApB,CAAlB;AACH;AACJ;;AACD,WAAOD,SAAP;AACH;;AAEDI,EAAAA,GAAG,GAAG,CAEL;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBAAQ;AAAA,8BACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADI,eAEJ;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,eAAf;AAA+B,UAAA,KAAK,EAAE;AAACC,YAAAA,eAAe,EAAEhB,YAAY,CAAC,KAAKO,IAAL,CAAUU,KAAX;AAA9B;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFI,eAMJ;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,kBACK,KAAKP,SAAL,GAAiBQ,GAAjB,CAAqB,CAACC,GAAD,EAAMC,KAAN,kBAClB;AAAK,UAAA,SAAS,EAAC,QAAf;AAAwB,UAAA,OAAO,EAAE,MAAM;AACnC,gBAAIN,GAAG,GAAG,KAAKP,IAAL,CAAUc,IAAV,CAAeD,KAAf,CAAV;AACA,iBAAKE,QAAL,CAAc;AAACb,cAAAA,KAAK,EAAE,KAAKF,IAAL,CAAUE;AAAlB,aAAd;;AACA,gBAAIK,GAAJ,EAAS;AACL,mBAAKA,GAAL;AACH;AACJ,WAND;AAAA,oBAOKK,GAAG,CAACD,GAAJ,CAAQK,GAAG,iBAAK,QAAC,SAAD;AAAW,YAAA,GAAG,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAAhB;AAPL;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cANI;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAoBH;;AAlD6C;;AA4DlD,MAAMC,SAAN,SAAwB1B,KAAK,CAACM,SAA9B,CAAgE;AAE5DW,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAK,MAAA,SAAS,EAAC,OAAf;AACK,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAEhB,YAAY,CAAC,KAAKM,KAAL,CAAWiB,GAAZ;AAA9B;AADZ;AAAA;AAAA;AAAA;AAAA,YAAP;AAEH;;AAL2D;;AAShE,eAAepB,KAAf","sourcesContent":["import React from \"react\";\nimport Game, {Token, TokenToColor} from \"./Game\";\nimport {ROWS, COLS} from \"./Constants\";\nimport './Board.css'\n\ninterface Props {\n}\n\ninterface State {\n    board: Token[][]\n}\n\nclass Board extends React.Component<Props, State> {\n\n    private game: Game;\n\n    constructor(props: Props) {\n        super(props);\n\n        this.game = new Game()\n\n        this.state = {\n            board: this.game.board\n        }\n    }\n\n    transpose(): Token[][] {\n        let transpose: Token[][] = []\n        for (let c = 0; c < COLS; c++) {\n            transpose.push([])\n            for (let r = 0; r < ROWS; r++) {\n                transpose[c].push(this.state.board[r][c])\n            }\n        }\n        return transpose\n    }\n\n    won() {\n\n    }\n\n    render() {\n        return (<div>\n            <h1>Connect4 AI</h1>\n            <div className=\"Row\">\n                <p>Current Player: </p>\n                <div className=\"CurrentPlayer\" style={{backgroundColor: TokenToColor(this.game.token)}}/>\n            </div>\n            <div className='Board'>\n                {this.transpose().map((col, index) => (\n                    <div className='Column' onClick={() => {\n                        let won = this.game.play(index)\n                        this.setState({board: this.game.board})\n                        if (won) {\n                            this.won()\n                        }\n                    }}>\n                        {col.map(tok => (<TokenView tok={tok}/>))}\n                    </div>\n                ))}\n            </div>\n        </div>)\n    }\n}\n\ninterface TokenProps {\n    tok: Token,\n}\n\ninterface TokenState {\n}\n\nclass TokenView extends React.Component<TokenProps, TokenState> {\n\n    render() {\n        return <div className='Token'\n                    style={{backgroundColor: TokenToColor(this.props.tok)}}/>\n    }\n\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}