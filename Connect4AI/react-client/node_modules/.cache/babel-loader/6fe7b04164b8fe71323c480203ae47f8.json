{"ast":null,"code":"import _classCallCheck from\"/Users/pranavputta/WebstormProjects/Connect4AI/react-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/pranavputta/WebstormProjects/Connect4AI/react-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import{cols,rows,win}from\"../WASM\";import'../Extensions';export var Token;(function(Token){Token[Token[\"red\"]=0]=\"red\";Token[Token[\"yellow\"]=1]=\"yellow\";Token[Token[\"none\"]=2]=\"none\";})(Token||(Token={}));export var Player;(function(Player){Player[Player[\"human\"]=0]=\"human\";Player[Player[\"ai\"]=1]=\"ai\";})(Player||(Player={}));export function TokenToColor(tok){switch(tok){case Token.none:return'#fff';case Token.red:return'#ff5252';case Token.yellow:return'#ffea00';}}export function PlayerToToken(player){switch(player){case Player.ai:return Token.red;case Player.human:return Token.yellow;}}export function PlayerToText(player){switch(player){case Player.ai:return\"AI\";case Player.human:return\"Human\";}}var Game=/*#__PURE__*/function(){function Game(){_classCallCheck(this,Game);this.board=void 0;this.currentPlayer=void 0;this.heights=void 0;var board=[];for(var r=0;r<rows;r++){board.push([]);for(var c=0;c<cols;c++){board[r].push(Token.none);}}this.board=board;this.currentPlayer=Player.human;this.heights=Array.repeat(0,cols);}_createClass(Game,[{key:\"togglePlayer\",value:function togglePlayer(){if(this.currentPlayer===Player.human){this.currentPlayer=Player.ai;}else{this.currentPlayer=Player.human;}}/**\n     * plays selected column with current player\n     * @param col column to choose\n     * @return returns if the current player won\n     */},{key:\"play\",value:function play(col){if(col>=cols){throw new Error(\"invalid column number\");}else if(this.heights[col]>=cols){return false;}// set token\nthis.board[rows-this.heights[col]-1][col]=this.token;// add to colHeights\nthis.heights[col]++;return true;}},{key:\"check_winner\",value:function check_winner(){var tok=this.token;for(var r=0;r<rows;r++){for(var c=0;c<cols;c++){if(r>rows-win&&c>cols-win||this.board[r][c]!==tok){// no need to check through positions\ncontinue;}var ct=1;// check right\nif(c<=cols-win){for(var i=1;i<win;i++){if(this.board[r][c+i]!==tok){break;}ct++;}if(ct===win){return true;}}// check down\nif(r<=rows-win){ct=1;for(var _i=1;_i<win;_i++){if(this.board[r+_i][c]!==tok){break;}ct++;}if(ct===win){return true;}}// check r-d diagonal\nif(r<=rows-win&&c<=cols-win){ct=1;for(var _i2=1;_i2<win;_i2++){if(this.board[r+_i2][c+_i2]!==tok){break;}ct++;}if(ct===win){return true;}}// check r-u diagonal\nif(r>=win-1&&c<=cols-win){ct=1;for(var _i3=1;_i3<win;_i3++){if(this.board[r-_i3][c+_i3]!==tok){break;}ct++;}if(ct===win){return true;}}}}return false;}},{key:\"token\",get:function get(){return PlayerToToken(this.currentPlayer);}},{key:\"playerName\",get:function get(){return PlayerToText(this.currentPlayer);}}]);return Game;}();export default Game;","map":{"version":3,"sources":["/Users/pranavputta/WebstormProjects/Connect4AI/react-client/src/game/Game.ts"],"names":["cols","rows","win","Token","Player","TokenToColor","tok","none","red","yellow","PlayerToToken","player","ai","human","PlayerToText","Game","board","currentPlayer","heights","r","push","c","Array","repeat","col","Error","token","ct","i"],"mappings":"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","sourcesContent":["import {cols, rows, win} from \"../WASM\";\nimport '../Extensions'\n\nexport enum Token {\n    red, yellow, none\n}\n\nexport enum Player {\n    human, ai\n}\n\nexport function TokenToColor(tok: Token) {\n    switch (tok) {\n        case Token.none:\n            return '#fff'\n        case Token.red:\n            return '#ff5252'\n        case Token.yellow:\n            return '#ffea00'\n    }\n}\n\nexport function PlayerToToken(player: Player) {\n    switch (player) {\n        case Player.ai:\n            return Token.red\n        case Player.human:\n            return Token.yellow\n    }\n}\n\nexport function PlayerToText(player: Player) {\n    switch (player) {\n        case Player.ai:\n            return \"AI\"\n        case Player.human:\n            return \"Human\"\n    }\n}\n\nclass Game {\n\n    public board: Token[][]\n    public currentPlayer: Player\n\n    private heights: number[]\n\n    constructor() {\n        let board: Token[][] = []\n        for (let r = 0; r < rows; r++) {\n            board.push([])\n            for (let c = 0; c < cols; c++) {\n                board[r].push(Token.none)\n            }\n        }\n\n        this.board = board\n        this.currentPlayer = Player.human\n        this.heights = Array.repeat(0, cols)\n    }\n\n    public get token(): Token {\n        return PlayerToToken(this.currentPlayer)\n    }\n\n    public get playerName(): string {\n        return PlayerToText(this.currentPlayer)\n    }\n\n    public togglePlayer() {\n        if (this.currentPlayer === Player.human) {\n            this.currentPlayer = Player.ai\n        } else {\n            this.currentPlayer = Player.human\n        }\n    }\n\n    /**\n     * plays selected column with current player\n     * @param col column to choose\n     * @return returns if the current player won\n     */\n    public play(col: number): boolean {\n        if (col >= cols) {\n            throw new Error(\"invalid column number\")\n        } else if (this.heights[col] >= cols) {\n            return false;\n        }\n\n        // set token\n        this.board[rows - this.heights[col] - 1][col] = this.token\n\n        // add to colHeights\n        this.heights[col]++;\n\n        return true;\n    }\n\n    public check_winner(): boolean {\n        let tok = this.token\n\n        for (let r = 0; r < rows; r++) {\n            for (let c = 0; c < cols; c++) {\n                if ((r > rows - win && c > cols - win) || this.board[r][c] !== tok) {\n                    // no need to check through positions\n                    continue;\n                }\n                let ct = 1;\n\n                // check right\n                if (c <= cols - win) {\n                    for (let i = 1; i < win; i++) {\n                        if (this.board[r][c + i] !== tok) {\n                            break;\n                        }\n                        ct++;\n                    }\n\n\n                    if (ct === win) {\n                        return true;\n                    }\n                }\n\n                // check down\n                if (r <= rows - win) {\n                    ct = 1;\n                    for (let i = 1; i < win; i++) {\n                        if (this.board[r + i][c] !== tok) {\n                            break;\n                        }\n                        ct++;\n                    }\n\n                    if (ct === win) {\n                        return true;\n                    }\n                }\n\n                // check r-d diagonal\n                if (r <= rows - win && c <= cols - win) {\n                    ct = 1;\n                    for (let i = 1; i < win; i++) {\n                        if (this.board[r + i][c + i] !== tok) {\n                            break;\n                        }\n                        ct++;\n                    }\n\n                    if (ct === win) {\n                        return true;\n                    }\n                }\n\n                // check r-u diagonal\n                if (r >= win - 1 && c <= cols - win) {\n                    ct = 1;\n                    for (let i = 1; i < win; i++) {\n                        if (this.board[r - i][c + i] !== tok) {\n                            break;\n                        }\n                        ct++;\n                    }\n\n                    if (ct === win) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n\n}\n\nexport default Game\n"]},"metadata":{},"sourceType":"module"}