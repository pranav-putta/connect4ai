{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pranavputta/WebstormProjects/Connect4AI/react-client/src/game/Board.tsx\";\nimport React from \"react\";\nimport { Token } from \"./Game\";\nimport { ROWS, COLS } from \"./Constants\";\nimport './Board.css';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    let board = [];\n\n    for (let r = 0; r < ROWS; r++) {\n      board.push([]);\n\n      for (let c = 0; c < COLS; c++) {\n        board[r].push(Token.none);\n      }\n    }\n\n    this.state = {\n      board: board\n    };\n  }\n\n  transpose() {\n    let transpose = [];\n\n    for (let c = 0; c < COLS; c++) {\n      transpose.push([]);\n\n      for (let r = 0; r < ROWS; r++) {\n        transpose[c].push(this.state.board[r][c]);\n      }\n    }\n\n    return transpose;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: this.transpose().map(row => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexDirection: 'row'\n        },\n        children: row.map(tok => /*#__PURE__*/_jsxDEV(TokenView, {\n          tok: tok\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 38\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nclass TokenView extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Token\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/pranavputta/WebstormProjects/Connect4AI/react-client/src/game/Board.tsx"],"names":["React","Token","ROWS","COLS","Board","Component","constructor","props","board","r","push","c","none","state","transpose","render","display","map","row","flexDirection","tok","TokenView"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,QAApB;AACA,SAAQC,IAAR,EAAcC,IAAd,QAAyB,aAAzB;AACA,OAAO,aAAP;;AASA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAkD;AAE9CC,EAAAA,WAAW,CAACC,KAAD,EAAe;AACtB,UAAMA,KAAN;AAEA,QAAIC,KAAgB,GAAG,EAAvB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,IAApB,EAA0BO,CAAC,EAA3B,EAA+B;AAC3BD,MAAAA,KAAK,CAACE,IAAN,CAAW,EAAX;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,IAApB,EAA0BQ,CAAC,EAA3B,EAA+B;AAC3BH,QAAAA,KAAK,CAACC,CAAD,CAAL,CAASC,IAAT,CAAcT,KAAK,CAACW,IAApB;AACH;AACJ;;AAED,SAAKC,KAAL,GAAa;AACTL,MAAAA,KAAK,EAAEA;AADE,KAAb;AAGH;;AAEDM,EAAAA,SAAS,GAAc;AACnB,QAAIA,SAAoB,GAAG,EAA3B;;AACA,SAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,IAApB,EAA0BQ,CAAC,EAA3B,EAA+B;AAC3BG,MAAAA,SAAS,CAACJ,IAAV,CAAe,EAAf;;AACA,WAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,IAApB,EAA0BO,CAAC,EAA3B,EAA+B;AAC3BK,QAAAA,SAAS,CAACH,CAAD,CAAT,CAAaD,IAAb,CAAkB,KAAKG,KAAL,CAAWL,KAAX,CAAiBC,CAAjB,EAAoBE,CAApB,CAAlB;AACH;AACJ;;AACD,WAAOG,SAAP;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAZ;AAAA,gBACF,KAAKF,SAAL,GAAiBG,GAAjB,CAAsBC,GAAD,iBAClB;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,aAAa,EAAE;AAAhB,SAAZ;AAAA,kBACKD,GAAG,CAACD,GAAJ,CAAQG,GAAG,iBAAK,QAAC,SAAD;AAAW,UAAA,GAAG,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAAhB;AADL;AAAA;AAAA;AAAA;AAAA,cADH;AADE;AAAA;AAAA;AAAA;AAAA,YAAP;AAOH;;AArC6C;;AA+ClD,MAAMC,SAAN,SAAwBrB,KAAK,CAACK,SAA9B,CAAgE;AAE5DU,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAJ2D;;AAQhE,eAAeX,KAAf","sourcesContent":["import React from \"react\";\nimport {Token} from \"./Game\";\nimport {ROWS, COLS} from \"./Constants\";\nimport './Board.css'\n\ninterface Props {\n}\n\ninterface State {\n    board: Token[][]\n}\n\nclass Board extends React.Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n\n        let board: Token[][] = []\n        for (let r = 0; r < ROWS; r++) {\n            board.push([])\n            for (let c = 0; c < COLS; c++) {\n                board[r].push(Token.none)\n            }\n        }\n\n        this.state = {\n            board: board,\n        }\n    }\n\n    transpose(): Token[][] {\n        let transpose: Token[][] = []\n        for (let c = 0; c < COLS; c++) {\n            transpose.push([])\n            for (let r = 0; r < ROWS; r++) {\n                transpose[c].push(this.state.board[r][c])\n            }\n        }\n        return transpose\n    }\n\n    render() {\n        return <div style={{display: 'flex'}}>\n            {this.transpose().map((row: Token[]) => (\n                <div style={{flexDirection: 'row'}}>\n                    {row.map(tok => (<TokenView tok={tok}/>))}\n                </div>\n            ))}\n        </div>\n    }\n}\n\ninterface TokenProps {\n    tok: Token\n}\n\ninterface TokenState {\n}\n\nclass TokenView extends React.Component<TokenProps, TokenState> {\n\n    render() {\n        return <div className='Token'/>\n    }\n\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}